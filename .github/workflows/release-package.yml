name: Node.js Package

on:
  release:
    types: [created]

jobs:
        npm:
        name: Publish to npm
        needs: ci
        if: always() && (needs.ci.result == 'success' || needs.ci.result == 'skipped')
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  registry-url: 'https://registry.npmjs.org'
                  cache: npm

            - name: Install npm dependencies
              run: npm ci
              
            - name: Publish to npm registry
              run: |
                # Change publish registry
                echo "$(jq '.publishConfig.registry = "https://registry.npmjs.org"' package.json)" > package.json
                # Publish package
                npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    gp:
        name: Publish to gp
        needs: ci
        if: always() && (needs.ci.result == 'success' || needs.ci.result == 'skipped')
        permissions:
            contents: read
            packages: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  registry-url: 'https://npm.pkg.github.com'
                  cache: npm
            
            - name: Install npm dependencies
              run: npm ci
            
            - name: Publish to github registry
              run: |
                # Change publish registry
                echo "$(jq '.publishConfig.registry = "https://npm.pkg.github.com"' package.json)" > package.json
                # Add organisation scope to package name
                echo "$( jq '.name = "@NickDurnev/time-formatter-WC-package"' package.json )" > package.json
                # And publish this  
                npm publish --@NickDurnev:registry=https://npm.pkg.github.com
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GP_TOKEN }}

